---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: flux-system
spec:
  targetNamespace: authentik
  releaseName: authentik
  storageNamespace: flux-system
  # We install the namespace with the secret
  # install:
  #   createNamespace: false
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: "2023.6.3" # Current as of August 20, 2023
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: authentik
      interval: 12h
  # Quite a refactor three months ago: https://github.com/goauthentik/helm/pull/163
  # https://artifacthub.io/packages/helm/goauthentik/authentik#values
  # # -- see configuration options at https://goauthentik.io/docs/installation/configuration/
  #  postgresql-password: A
  #  postgresql-postgres-password: B
  values:
    # https://github.com/goauthentik/helm/blob/c51952b024451ee90fc3603fae24f39472b1b197/charts/authentik/templates/server-deployment.yaml#L77
    # https://github.com/goauthentik/helm/blob/c51952b024451ee90fc3603fae24f39472b1b197/charts/authentik/templates/worker-deployment.yaml#L80
    # envValueFrom:
    #   AUTHENIC_VAR_NAME:
    #     secretKeyRef:
    #       key: X
    #       name: Y
    env:
      ENV_KEY: env_value
      # Set the email address for the default akadmin user.
      # https://goauthentik.io/docs/installation/automated-install#authentik_bootstrap_email
      AUTHENTIK_BOOTSTRAP_EMAIL: uk@ii.coop
    envFrom:
      # We may need the cm to exist beforehand, we don't really need it so disabling for now
      # configMapRef:
      #   name: authentik-env
      - secretRef:
          name: authentik-env
    authentik:
      error_reporting:
        enabled: false
      # secret_key: "BJRl0HKI7i3T0XZOQiBYm9kDsx9WgzhaeiDAyyAq753MudVlcJ"
      # postgresql:
      #   password: "/erJXa5usdMmtWoR3/rbmhjWNjg1/neSpjn2E8ipme0/znHP"
      # Let's figure a way to store this better
      # This sends anonymous usage-data, stack traces on errors and
      # performance data to sentry.io, and is fully opt-in
    ingress:
      ingressClassName: "nginx"
      enabled: true
      tls:
        - hosts:
            - sso.uk.cloudnative.coop
      hosts:
        - host: sso.uk.cloudnative.coop
          paths:
            - path: "/"
              pathType: Prefix
    postgresql:
      enabled: true
      auth:
        existingSecret: authentik-env
        secretKeys:
          adminPasswordKey: AUTHENTIK_POSTGRESQL__PASSWORD
          userPasswordKey: AUTHENTIK_POSTGRESQL__PASSWORD
    redis:
      enabled: true
